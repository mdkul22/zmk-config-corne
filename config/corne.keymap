/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/pointing.h>

&mt {
    flavor = "tap-preferred";
    tapping-term-ms = <250>;
};

/ {
    macros {
        vimgrep: vimgrep {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LC(G)>;
            label = "VIMGREP";
        };

        vim_file_grep: vim_file_grep {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LC(P)>;
            label = "VIM_FILE_GREP";
        };

        screenshot: screenshot {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LG(LS(N4))>;
            label = "SCREENSHOT";
        };

        screen_lock: screen_lock {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LC(LG(Q))>;
            label = "SCREEN_LOCK";
        };

        tmux_select_mode: tmux_select_mode {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LC(A) &kp LEFT_BRACKET>;
            label = "TMUX_SELECT_MODE";
            wait-ms = <0>;
        };

        emoji: emoji {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LC(LG(SPACE))>;
            label = "EMOJI";
        };
    };

    behaviors {
        lshift: lshift {
            compatible = "zmk,behavior-hold-tap";
            label = "LSHIFT";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <150>;
            hold-trigger-key-positions = <6 7 8 9 10 11 18 19 20 21 22 23 30 31 32 33 34 35 39 40 41>;
        };

        rshift: rshift {
            compatible = "zmk,behavior-hold-tap";
            label = "RSHIFT";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <150>;
            hold-trigger-key-positions = <0 1 2 3 4 5 12 13 14 15 16 17 24 25 26 27 28 29 36 37 38>;
        };
    };

    combos {
        compatible = "zmk,combos";

        mouse_toggle {
            bindings = <&tog 3>;
            key-positions = <39 38 0 11>;
            timeout-ms = <250>;
        };

        keyboard_off {
            bindings = <&soft_off>;
            key-positions = <0 11 24 35>;
            timeout-ms = <500>;
            layers = <0>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        main {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BSPC |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&kp GRAVE              &kp Q        &kp W  &kp E            &kp R                 &mt LEFT_BRACKET T    &mt RIGHT_BRACKET Y  &kp U                  &kp I           &kp O       &kp P            &kp MINUS
&kp LEFT_PARENTHESIS   &kp A        &kp S  &kp D            &lshift LEFT_SHIFT F  &kp G                 &kp H                &rshift RIGHT_SHIFT J  &kp K           &kp L       &kp SEMI         &kp SQT
&kp RIGHT_PARENTHESIS  &mt RCTRL Z  &kp X  &mt LALT C       &kp V                 &mt LCMD B            &mt RCMD N           &kp M                  &mt RALT COMMA  &kp PERIOD  &mt RCTRL SLASH  &kp EQUAL
                                           &mt LCTRL LC(A)  &lt 1 SPACE           &lt 2 ESCAPE          &lt 2 ENTER          &lt 1 BACKSPACE        &kp TAB
            >;
        };

        numsym {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BSPC |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp CAPS                              &none              &kp N7        &kp N8  &kp N9        &kp N0       &none      &kp AMPERSAND    &kp ASTERISK  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &none
&kp LEFT_BRACKET                      &kp RIGHT_BRACKET  &kp NUMBER_4  &kp N5  &kp NUMBER_6  &kp EQUAL    &kp PLUS   &kp DOLLAR       &kp PERCENT   &kp CARET             &kp LEFT_BRACE         &kp RIGHT_BRACE
&kp C_AC_NEXT_KEYBOARD_LAYOUT_SELECT  &kp PIPE           &kp N1        &kp N2  &kp N3        &kp MINUS    &kp UNDER  &kp EXCLAMATION  &kp AT        &kp HASH              &kp BACKSLASH          &none
                                                                       &trans  &trans        &trans       &trans     &trans           &trans
            >;
        };

        navctrl {
            bindings = <
&bt BT_NXT  &screen_lock  &kp LC(LEFT)  &kp LC(DOWN)  &kp LC(UP_ARROW)  &kp LC(RIGHT)    &vimgrep        &kp LC(RIGHT_BRACKET)  &kp LC(T)     &vim_file_grep   &none                  &soft_off
&bt BT_CLR  &screenshot   &emoji        &kp GLOBE     &kp LEFT_SHIFT    &none            &kp LEFT_ARROW  &kp DOWN_ARROW         &kp UP_ARROW  &kp RIGHT_ARROW  &kp LS(LEFT_BRACKET)   &none
&bt BT_PRV  &kp LCTRL     &none         &kp LEFT_ALT  &none             &kp LEFT_GUI     &kp HOME        &kp PAGE_DOWN          &kp PAGE_UP   &kp END          &kp LS(RIGHT_BRACKET)  &none
                                        &trans        &trans            &trans           &trans          &trans                 &trans
            >;
        };

        mouse {
            bindings = <
&none  &none  &none           &mmv MOVE_UP    &none            &none    &msc SCRL_LEFT  &msc SCRL_DOWN  &msc SCRL_UP  &msc SCRL_RIGHT  &none  &none
&none  &none  &mmv MOVE_LEFT  &mmv MOVE_DOWN  &mmv MOVE_RIGHT  &none    &mmv MOVE_LEFT  &mmv MOVE_DOWN  &mmv MOVE_UP  &mmv MOVE_RIGHT  &none  &none
&none  &none  &none           &none           &none            &none    &mkp LCLK       &mkp MCLK       &mkp MCLK     &mkp RCLK        &none  &none
                              &none           &none            &none    &none           &none           &none
            >;
        };
    };
};
